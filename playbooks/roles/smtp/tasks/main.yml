---
- name: Install postfix packages
  action: >
    apt name={{ item }} update_cache=yes cache_valid_time=3600 state=latest
  with_list:
  - postfix
  - swaks

- name: Install LDAP relative packages
  action: >
    apt name={{ item }} update_cache=yes cache_valid_time=3600 state=latest
  with_list:
  - postfix-ldap
  - ldap-utils
  when:
  - postfix_conf.ldap_recipient_maps is defined
  - postfix_conf.ldap_recipient_maps

- name: Verify all packages are up-to-date
  apt:
    upgrade: yes
    force_apt_get: yes

- name: Clears out the local repository of retrieved package files
  command: apt-get clean warn=false
  changed_when: false

- name: Generate file "/etc/postfix/main.cf"
  template:
    src: "{{ role_path }}/templates/etc_postfix_main.cf.j2" 
    dest: /etc/postfix/main.cf
    owner: root
    group: root
    mode: 0644
  register: modify_etc_postfix_main_cf

- name: Copy file "/etc/postfix/master.cf"
  copy:
    src: "{{ role_path }}/files/etc_postfix_master.cf"
    dest: /etc/postfix/master.cf
    owner: root
    group: root
    mode: 0644
  register: modify_etc_postfix_master_cf

- name: Generate file "/etc/postfix/ldap-recipient-maps.cf"
  template:
    src: "{{ role_path }}/templates/etc_postfix_ldap-recipient-maps.cf.j2" 
    dest: /etc/postfix/ldap-recipient-maps.cf
    owner: root
    group: root
    mode: 0644
  register: modify_etc_postfix_ldap_recipient_maps
  when:
  - postfix_conf.ldap_recipient_maps is defined
  - postfix_conf.ldap_recipient_maps

- name: Copy LDAP certificate
  copy:
    src: "{{ minidc_working_directory }}/{{ rvprx_pair }}/etc/letsencrypt/live/{{ certificate_name }}/fullchain.pem"
    dest: "{{ ca_cert_dir }}/{{ certificate_name }}-fullchain.pem"
  register: copy_ldap_crt_task
  when: use_letsencrypt_rvprx_cert

- name: Copy LDAP key
  copy:
    src: "{{ minidc_working_directory }}/{{ rvprx_pair }}/etc/letsencrypt/live/{{ certificate_name }}/privkey.pem"
    dest: "{{ ca_private_dir }}/{{ certificate_name }}-privkey.pem"
    mode: 0640
    group: ssl-cert
  register: copy_ldap_key_task
  when: use_letsencrypt_rvprx_cert

- name: Reload postfix service
  systemd:
    name: postfix
    state: reloaded
  when: modify_etc_postfix_main_cf.changed or
        modify_etc_postfix_master_cf.changed or
        modify_etc_postfix_ldap_recipient_maps.changed or
        copy_ldap_crt_task.changed
        or copy_ldap_key_task.changed

- name: Generate file "/etc/postfix/transport-maps"
  template:
    src: "{{ role_path }}/templates/etc_postfix_transport-maps.j2"
    dest: /etc/postfix/transport-maps
    owner: root
    group: root
    mode: 0644
  register: modify_etc_postfix_transport_maps
  when: postfix_conf.transport_maps is defined

- name: Postmap file "/etc/postfix/transport-maps"
  command: postmap /etc/postfix/transport-maps
  when:
  - postfix_conf.transport_maps is defined
  - modify_etc_postfix_transport_maps.changed

- name: Read LDAP password in "{{ minidc_working_directory }}/{{ ldap_pair }}/passwords"
  local_action:
    module: slurp
    path: "{{ minidc_working_directory }}/{{ ldap_pair }}/passwords/{{ item.value | regex_replace('^(.+?):.*$', '\\1') }}_password"
  with_dict: "{{ postfix_conf.sasl_passwd }}"
  register: slurp_ldap_passwords
  when:
  - postfix_conf.sasl_passwd is defined
  - item.value | regex_replace('^.+?:(.*)$', '\\1') == 'ldap'
  loop_control:
    label: "{{ item.value | regex_replace('^(.+?):.*$', '\\1') }}"

- name: Convert LDAP passwords
  set_fact:
    dict_ldap_passwords: "{{ dict_ldap_passwords | default({}) | combine({ (item.item.value | regex_replace('^(.+?):.*$', '\\1')) : (item.content | b64decode | regex_replace('^(.*)\\n$', '\\1')) }) }}"
  with_list: "{{ slurp_ldap_passwords.results }}"
  when:
  - postfix_conf.sasl_passwd is defined
  - item.skipped is not defined
  loop_control:
    label: "{{ item.item.value | regex_replace('^(.+?):.*$', '\\1') }}"

- name: Generate file "/etc/postfix/sasl-passwd"
  template:
    src: "{{ role_path }}/templates/etc_postfix_sasl-passwd.j2"
    dest: /etc/postfix/sasl-passwd
    owner: root
    group: root
    mode: 0644
  register: modify_etc_postfix_sasl_passwd
  when: postfix_conf.sasl_passwd is defined

- name: Create file "/etc/postfix/sasl/smtpd.conf"
  copy:
    content: |
      pwcheck_method: saslauthd
      mech_list: PLAIN LOGIN
    dest: /etc/postfix/sasl/smtpd.conf
    owner: root
    group: root
    mode: 0644
  when: saslauthd_conf is defined

- name: Postmap file "/etc/postfix/sasl-passwd"
  command : postmap /etc/postfix/sasl-passwd
  when :
  - postfix_conf.sasl_passwd is defined
  - modify_etc_postfix_sasl_passwd.changed

- include_tasks: configure_saslauthd.yml
  when:
  - saslauthd_conf is defined
  - saslauthd_conf

- name: Generate file "/etc/aliases"
  template:
    src: "{{ role_path }}/templates/etc_postfix_aliases.j2"
    dest: /etc/aliases
    owner: root
    group: root
    mode: 0644
  register: modify_etc_aliases
  when: postfix_conf.aliases is defined

- name: Update aliases
  command: newaliases
  when:
  - postfix_conf.aliases is defined
  - modify_etc_aliases.changed

- name: Generate file "/etc/postfix/super-users"
  template:
    src: "{{ role_path }}/templates/etc_postfix_super-users.j2"
    dest: /etc/postfix/super-users
    owner: root
    group: root
    mode: 0644
  register: modify_etc_postfix_super_users
  when: postfix_conf.super_users is defined

- name: Postmap file "/etc/postfix/super-users"
  command: postmap /etc/postfix/super-users
  when:
  - postfix_conf.super_users is defined
  - modify_etc_postfix_super_users.changed
- name: Be sure postfix user can access private key
  file:
    path: "{{ ca_private_dir }}"
    mode: 0755



# TODO Get the letsencrypt certificates from working dir
