---
- set_fact:
    ip_min: "{{ dhcp_subnet.range | regex_replace('([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3}) [0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}', '\\1\\2\\3\\4') }}" 
    ip_max: "{{ dhcp_subnet.range | regex_replace('[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3} ([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})', '\\1\\2\\3\\4') }}"

- name: Make the lists of PTR records in the DHCP leases
  vars:
  set_fact:
    ptr_records_in_dhcp: "{{ ptr_records_in_dhcp + [[ dns_master_ptr_zones | selectattr('subnet', 'equalto', dhcp_subnet.network) | map(attribute='ptr_zone') | list | join(''), item.1, item.3 ]] }}"
  with_items:
    - "{{ dhcp_leases_precise }}"
  when:
    - dhcp_leases_precise is defined
    - item.0 != 'None'
    - item.1 != 'None'
    - item.2 != 'None'
    - item.3 != 'None'
    - item.4 != 'None'
    - (ip_min | int) <= (item.0 | regex_replace( "([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})", "\\1\\2\\3\\4" ) | int) <= (ip_max | int)
  loop_control:
    label: '{{ item.1}}'
