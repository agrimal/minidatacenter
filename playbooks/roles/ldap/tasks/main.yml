---
- name: Update repositories cache and install package debconf-utils
  apt:
    name: debconf-utils
    update_cache: yes
    cache_valid_time: 3600
    state: present

- name: Configure slapd debconf selections "shared/organization"
  debconf:
    name: slapd
    question: shared/organization
    value: "{{ ldap_organization }}"
    vtype: string

- name: Configure slapd debconf selections "slapd/domain"
  debconf:
    name: slapd
    question: slapd/domain
    value: "{{ ldap_domain }}"
    vtype: string

- name: Configure slapd debconf selections "slapd/purge_database"
  debconf:
    name: slapd
    question: slapd/purge_database
    value: "true"
    vtype: boolean

- name: Install packages
  apt:
    name: "{{ item }}"
    update_cache: yes
    cache_valid_time: 3600
    state: present
  loop:
  - slapd
  - ldap-utils
  - ssl-cert
#  - python3-pip
#  - libldap2-dev
#  - libsasl2-dev

#- name: Install "python-ldap" pip package
#  pip:
#    name: python-ldap
#    version: 3.0.0

- name : Modify "/etc/default/slapd"
  template:
    src: "{{ role_path }}/templates/main_slapd.j2"
    dest: /etc/default/slapd
    owner: root
    group: root
    mode: 0644
  register: modify_etc_default_slapd_task

- name: Modify parameter "DefaultLimitNOFILE" in "/etc/systemd/system.conf"
  replace:
    path: /etc/systemd/system.conf
    regexp: '^#DefaultLimitNOFILE=$'
    replace: 'DefaultLimitNOFILE=1024'
  register: modify_etc_systemd_system_conf_task

- name: Add user "openldap" in group "ssl-cert"
  user:
    name: openldap
    groups: ssl-cert
    append: yes
  register: modify_openldap_group_task

- name: Copy CA certificate
  copy:
    src: "{{ minidc_working_directory }}/{{ ca_pair }}/{{ hostvars[ca_pair]['ca_easy_rsa_install_dir'] }}/keys/ca.crt"
    dest: /etc/ssl/certs/ca.crt
  register: copy_ca_crt_task

- name: Copy LDAP certificate
  copy:
    src: "{{ minidc_working_directory }}/{{ ca_pair }}/{{ hostvars[ca_pair]['ca_easy_rsa_install_dir'] }}/keys/{{ ldap_certificate }}.crt"
    dest: "/etc/ssl/certs/{{ ldap_certificate }}.crt"
  register: copy_ldap_crt_task

- name: Copy LDAP key
  copy:
    src: "{{ minidc_working_directory }}/{{ ca_pair }}/{{ hostvars[ca_pair]['ca_easy_rsa_install_dir'] }}/keys/{{ ldap_certificate }}.key"
    dest: "/etc/ssl/private/{{ ldap_certificate }}.key"
    mode: 0640
    group: ssl-cert
  register: copy_ldap_key_task

- name: Restart slapd service if configuration has changed
  systemd:
    name: slapd
    state: restarted
  when:
  - modify_etc_default_slapd_task.changed or
    modify_etc_systemd_system_conf_task.changed or
    modify_openldap_group_task.changed or
    copy_ca_crt_task.changed or
    copy_ldap_crt_task.changed or
    copy_ldap_key_task.changed

#- name: Change access to "cn=config"
#  ldap_attr:
#    dn: olcDatabase={0}config,cn=config
#    name: olcAccess
#    values: to * by dn.exact=cn=admin,{{ ldap_rootdn }} manage by * break
#    state: exact
#    validate_certs: no

#- name: Change loglevel to "stats"
#  ldap_attr:
#    dn: cn=config
#    name: olcLogLevel
#    values: stats
#    state: exact
#    validate_certs: no

- set_fact:
    ldapsearch_command: ldapsearch -o ldif-wrap=no -Q -Y external -H ldapi:///
    ldapmodify_command: ldapmodify -Y external -H ldapi:///
    slapd_log_level: stats
    olcDatabase_config_olcAccess: to * by dn.exact=cn=admin,{{ ldap_rootdn }} manage by * break
    config_olcTLSCACertificateFile: /etc/ssl/certs/ca.crt
    config_olcTLSCertificateFile: /etc/ssl/certs/{{ ldap_certificate }}.crt
    config_olcTLSCertificateKeyFile: /etc/ssl/private/{{ ldap_certificate }}.key

- name: Create directory "/srv/slapd"
  file:
    path: /srv/slapd
    state: directory

# olcLogLevel for cn=config

- name: Copy file slapdloglevel.ldif
  template:
    src: "{{ role_path }}/templates/main_slapdloglevel.ldif.j2"
    dest: /srv/slapd/slapdloglevel.ldif

- name: Execute ldapsearch to get olcLogLevel attribute value for cn=config
  command: ldapsearch -Q -Y external -H ldapi:/// -b cn=config "(cn=config)" olcLogLevel -LLL
  register: ldapsearch_olcLogLevel
  changed_when: False

- name: Extract olcLogLevel attribute value from previous ldapsearch
  set_fact:
    current_slapd_log_level: "{{ ldapsearch_olcLogLevel.stdout_lines | select('match', 'olcLogLevel:') | list | join('') | regex_replace('olcLogLevel: ', '') }}"

- name: Modify slapd log level
  command: "{{ ldapmodify_command }} -f /srv/slapd/slapdloglevel.ldif"
  when: slapd_log_level != current_slapd_log_level

# olcAccess for olcDatabase={0}config,cn=config

- name: Copy file config_olcAccess.ldif
  template:
    src: "{{ role_path }}/templates/main_config_olcAccess.ldif.j2"
    dest: /srv/slapd/config_olcAccess.ldif

- name: Execute ldapsearch to get olcAccess attribute value for "olcDatabase={0}config,cn=config"
  command: "{{ ldapsearch_command }} -b cn=config '(olcDatabase={0}config)' olcAccess -LLL"
  register: ldapsearch_olcDatabase_config_olcAccess
  changed_when: False

- name: Extract olcAccess attribute value from previous ldapsearch
  set_fact:
    current_olcDatabase_config_olcAccess: "{{ ldapsearch_olcDatabase_config_olcAccess.stdout | regex_replace('\\n', '') | regex_replace('.*olcAccess: \\{0\\}(.*)', '\\1') }}"

- name: Modify olcAccess attribute for "olcDatabase={0}config,cn=config"
  command: "{{ ldapmodify_command }} -f /srv/slapd/config_olcAccess.ldif"
  when: olcDatabase_config_olcAccess != current_olcDatabase_config_olcAccess

# olcTLS... for cn=config

- name: Copy olcTLS LDIF files
  template:
    src: "{{ role_path }}/templates/main_config_{{ item }}.ldif.j2"
    dest: /srv/slapd/config_{{ item }}.ldif
  loop:
  - olcTLS_attributes_add
  - olcTLSCACertificateFile_modify
  - olcTLSCertificateFile_modify
  - olcTLSCertificateKeyFile_modify

- name: Execute ldapsearch to get olcTLSCACertificateFile attribute value for "cn=config"
  command: "{{ ldapsearch_command }} -b cn=config '(cn=config)' olcTLSCACertificateFile -LLL"
  register: ldapsearch_config_olcTLSCACertificateFile
  changed_when: False

- name: Execute ldapsearch to get olcTLSCertificateFile attribute value for "cn=config"
  command: "{{ ldapsearch_command }} -b cn=config '(cn=config)' olcTLSCertificateFile -LLL"
  register: ldapsearch_config_olcTLSCertificateFile
  changed_when: False

- name: Execute ldapsearch to get olcTLSCertificateKeyFile attribute value for "cn=config"
  command: "{{ ldapsearch_command }} -b cn=config '(cn=config)' olcTLSCertificateKeyFile -LLL"
  register: ldapsearch_config_olcTLSCertificateKeyFile
  changed_when: False

- name: Extract olcTLS... attributes values from previous ldapsearches
  set_fact:
    current_config_olcTLSCACertificateFile: "{{ ldapsearch_config_olcTLSCACertificateFile.stdout | regex_replace('\\n', '') | regex_replace('.*olcTLSCACertificateFile::? (.*)', '\\1') }}"
    current_config_olcTLSCertificateFile: "{{ ldapsearch_config_olcTLSCertificateFile.stdout | regex_replace('\\n', '') | regex_replace('.*olcTLSCertificateFile::? (.*)', '\\1') }}"
    current_config_olcTLSCertificateKeyFile: "{{ ldapsearch_config_olcTLSCertificateKeyFile.stdout | regex_replace('\\n', '') | regex_replace('.*olcTLSCertificateKeyFile::? (.*)', '\\1') }}"

- name: Add olcTLS... attributes for "cn=config"
  command: "{{ ldapmodify_command }} -f /srv/slapd/config_olcTLS_attributes_add.ldif"
  when:
  - "current_config_olcTLSCACertificateFile == 'dn: cn=config'"
  - "current_config_olcTLSCertificateFile == 'dn: cn=config'"
  - "current_config_olcTLSCertificateKeyFile == 'dn: cn=config'"

- name: Modify olcTLSCACertificateFile attribute for "cn=config"
  command: "{{ ldapmodify_command }} -f /srv/slapd/config_olcTLSCACertificateFile_modify.ldif"
  when:
  - current_config_olcTLSCACertificateFile != config_olcTLSCACertificateFile
  - "current_config_olcTLSCACertificateFile != 'dn: cn=config'"

- name: Modify olcTLSCertificateFile attribute for "cn=config"
  command: "{{ ldapmodify_command }} -f /srv/slapd/config_olcTLSCertificateFile_modify.ldif"
  when:
  - current_config_olcTLSCertificateFile != config_olcTLSCertificateFile
  - "current_config_olcTLSCertificateFile != 'dn: cn=config'"

- name: Modify olcTLSCertificateKeyFile attribute for "cn=config"
  command: "{{ ldapmodify_command }} -f /srv/slapd/config_olcTLSCertificateKeyFile_modify.ldif"
  when:
  - current_config_olcTLSCertificateKeyFile != config_olcTLSCertificateKeyFile
  - "current_config_olcTLSCertificateKeyFile != 'dn: cn=config'"
