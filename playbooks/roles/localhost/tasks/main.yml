---
- name: Configure repositories
  copy:
    content: |
      deb http://archive.ubuntu.com/ubuntu/ bionic main restricted universe multiverse
      deb http://security.ubuntu.com/ubuntu/ bionic-security main restricted universe multiverse
      deb http://archive.ubuntu.com/ubuntu/ bionic-updates main restricted universe multiverse
      deb http://archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse
    dest: /etc/apt/sources.list
    owner: root
    group: root
    mode: 0644

- name: Verify all installed packages are up-to-date
  apt:
    upgrade: yes
    force_apt_get: yes

- name: Install or update packages
  action: >
    apt name={{ item }} update_cache=yes cache_valid_time=3600 state=latest force_apt_get=yes
  with_list:
  - apt-utils
  - bash-completion
  - dnsutils
  - htop
  - iftop
  - man-db
  - curl
  - tcpdump
  - mlocate
  - net-tools
  - git
  - apparmor
  - apparmor-profiles
  - apparmor-profiles-extra
  - apparmor-utils
  - lxd
  - lxd-client
  - lxd-tools
  - criu
  - openssh-server
  - bsdmainutils
  - dmidecode
  - hdparm
  - iptables
  - iputils-tracepath
  - lsof
  - ltrace
  - manpages
  - pciutils
  - rsync
  - strace
  - tcpdump
  - telnet
  - time
  - traceroute
  - vim
  - tree
  - jq
  - python3-psutil
  - python3-colorama
  - needrestart

- name: clears out the local repository of retrieved package files
  command: apt-get clean warn=false
  changed_when: false

- name: Copy "/root/.profile", "/root/.bashrc" and "/root/.vimrc"
  copy:
    src: "{{ role_path }}/files/main_{{ item }}"
    dest: "/root/{{ item }}"
    owner: root
    group: root
    mode: 0644
  loop:
  - .profile
  - .bashrc
  - .vimrc

- name: Copy "/root/.bash_aliases"
  template:
    src: "{{ role_path }}/templates/main_.bash_aliases.j2"
    dest: /root/.bash_aliases
    owner: root
    group: root
    mode: 0644

- name: Clone git repo "https://github.com/nathanaelkane/vim-indent-guides.git" into "/root/.vim" directory
  git:
    repo: 'https://github.com/nathanaelkane/vim-indent-guides.git'
    dest: /root/.vim
    clone: yes
    update: yes

- name: Be sure the minidc working directory exists
  file:
    path: "{{ minidc_working_directory }}"
    state: directory
    mode: 0700

# Modify limits in accordance with https://github.com/lxc/lxd/blob/master/doc/production-setup.md
- name: Modify open files limit in "/etc/systemd/system.conf"
  replace:
    path: /etc/systemd/system.conf
    regexp: '^#?(DefaultLimitNOFILE=).*$'
    replace: '\g<1>1048576'

- name: Modify memory lock limit in "/etc/systemd/system.conf"
  replace:
    path: /etc/systemd/system.conf
    regexp: '^#?(DefaultLimitMEMLOCK=).*$'
    replace: '\g<1>infinity'

- name: Modify system configuration in "/etc/sysctl.d/99-sysctl.conf"
  blockinfile:
    path: /etc/sysctl.d/99-sysctl.conf
    block: |
      fs.inotify.max_queued_events = 1048576
      fs.inotify.max_user_instances = 1048576
      fs.inotify.max_user_watches = 1048576
      vm.max_map_count = 262144
      kernel.dmesg_restrict = 1
      net.core.netdev_max_backlog = 65536
  register: modify_sysctl_params

- name: Load new sysctl parameters
  command: sysctl -p
  when: modify_sysctl_params.changed

- name: Disable Ubuntu's Message of the Day
  replace:
    path: /etc/default/motd-news
    regexp: '^#?(ENABLED=).*$'
    replace: '\g<1>0'

- name: Copy "/etc/profile.d/server_info.sh"
  copy:
    src: "{{ role_path }}/files/main_server_info.sh"
    dest: /etc/profile.d/server_info.sh
    owner: root
    group: root
    mode: 0644

- name: Copy "/etc/profile.d/server_info.py"
  copy:
    src: "{{ role_path }}/files/main_server_info.py"
    dest: /etc/profile.d/server_info.py
    owner: root
    group: root
    mode: 0744

- name: Make a symlink from "/etc/profile.d/server_info.sh" to "/usr/local/sbin/server_info.sh"
  file:
    src: /etc/profile.d/server_info.sh
    dest: /usr/local/sbin/server_info.sh
    state: link
    owner: root
    group: root

- name: Configure the network
  vars:
    network_config: "{{ { 'network' : network } }}"
  copy:
    content: "{{ network_config | to_nice_yaml(indent=4) }}"
    dest: /etc/netplan/config.yaml
  register: configure_network_task

- name: Apply new network configuration
  command: netplan apply
  when:
  - configure_network_task.changed

- name: Enable and start lxd systemd service
  systemd:
    name: lxd
    state: started
    enabled: yes

- name: Verify if LXD profile "default" exists
  command: lxc profile show default
  register: lxc_profile_show_default_task
  changed_when: False
  failed_when: False

- name: Delete LXD profile "default"
  command: lxc profile delete default
  when:
  - lxd_init
  - lxc_profile_show_default_task.rc == 0

- name: Verify if LXD storage "lxd" exists
  command: lxc storage show lxd
  register: lxc_storage_show_lxd_task
  changed_when: False
  failed_when: False

- name: Delete LXD storage "lxd"
  command: lxc storage delete lxd
  when:
  - lxd_init
  - lxc_storage_show_lxd_task.rc == 0

- name: Initialize LXD lightervisor
  vars:
    lxd_preseed_config: "{{ lxd_preseed | to_nice_yaml(indent=2) }}"
  shell: echo -e "{{ lxd_preseed_config }}" | lxd init --preseed
  register: lxd_init_task
  when: lxd_init

- name: Generate SSH key for root user
  user:
    name: root
    generate_ssh_key: yes
    ssh_key_type: ed25519
    ssh_key_comment: root@{{ inventory_hostname }}

- name: Configure TimeZone
  timezone:
    name: "{{ local_timezone }}"

- name: Create symlink from "{{ playbook_dir }}/../ansible.cfg" to /root/.ansible.cfg
  file:
    state: link
    path: /root/.ansible.cfg
    src: "{{ playbook_dir }}/../ansible.cfg"
