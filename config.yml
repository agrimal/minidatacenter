---
# networks
# The container_interface name can't include the '-' symbol
# The DNS IPs are set per interface and not globally, which sounds logic
# as the DNS server has to be accessed via a specific netwotk
networks:
    - name: "external"
      host_bridge: "br-ext"
      container_interface: "ethext"
      cidr_ip: 192.168.1.0/24
      gateway: 192.168.1.1
      gateway_is_default_route: True
      dns_ip:
          - 192.168.1.1
    - name: "internal"
      host_bridge: "br-int"
      container_interface: "ethint"
      cidr_ip: 10.10.0.0/24
      gateway:
      gateway_is_default_route: False
      dns_ip:
          - 10.10.0.31 # We use here the internal IP of the DNS container

# containers
# Hierarchical tree of groups, names and IP addresses for each network
# The network names must match those declared in previous 'networks' section
containers:
    dns_hosts:
        ubudns02:
            external: 192.168.1.231
            internal: 10.10.0.31
    dhcp_hosts:
        ubudhcp02:
            external: 192.168.1.232
            internal: 10.10.0.32
    ca_hosts:
        ubuca02:
            external: 192.168.1.233
            internal: 10.10.0.33

# containers_config
# You can add here any compatible LXD parameter
containers_config:
    limits.cpu: "2"
    limits.memory: "2GB"
    boot.autostart: "true"

# containers_source
# The image used to build the containers
containers_source:
    type: "image"
    mode: "pull"
    server: "https://images.linuxcontainers.org"
    protocol: "simplestreams"
    alias: "ubuntu/bionic/amd64"

# The SSH public key, added in the /root/.ssh/authorized_keys file into the containers
ansible_ssh_public_key: "/root/.ssh/id_rsa.pub"
# The network ansible uses to connect to the containers
ansible_network: "external"

# Common variables to all containers
all_containers:
    # The python path in containers for ansible
    ansible_python_interpreter: '/usr/bin/env python3'
    # The timezone for containers
    containers_timezone: 'Europe/Paris'
    # Wether we use known_hosts or not
    #host_key_checking: False
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    # Better performance, doesn't work with sudo
    pipelining: True

# Certificate Authority configuration
ca_config:
    ubuca02:    
        organisation: "Tech-Tips"
        country: "France"
        province: "Ile-de-France"
        ou: "tech-tips.fr"
        city: "Paris"
        certificates:
            servers:
                - "vpn.tech-tips.fr"
                - "ldap.tech-tips.home"
            clients:
                - "client01"
                - "client02"
                - "client03"

dns_config:
    domains:
        internal: "tech-tips.home"
        external: "tech-tips.fr"
