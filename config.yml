---
# The SSH public key, added in the /root/.ssh/authorized_keys file into the containers
# Used by create-containers.py to allow ansible to connect to the containers as root
ansible_ssh_public_key: '/root/.ssh/id_rsa.pub'

# networks
# --------
# The container_interface name can't include the '-' symbol
# The DNS IPs are set per interface and not globally, which sounds logic
#   as the DNS server has to be accessed via a specific netwotk
networks:
    - name: "external"
      host_bridge: "br-ext"
      container_interface: "ethext"
      cidr_ip: 192.168.1.0/24
      gateway: 192.168.1.1
      gateway_is_default_route: True
      dns_ip:
          - 192.168.1.1
    - name: "internal"
      host_bridge: "br-int"
      container_interface: "ethint"
      cidr_ip: 10.10.0.0/24
      gateway:
      gateway_is_default_route: False
      dns_ip:
          - 10.10.0.31 # We use here the internal IP of the DNS container

# containers
# Hierarchical tree of groups, names and IP addresses for each network
# The network names must match those declared in previous 'networks' section
containers:
    dns_hosts:
        ubudns02:
            external: 192.168.1.231
            internal: 10.10.0.31
    dhcp_hosts:
        ubudhcp02:
            external: 192.168.1.232
            internal: 10.10.0.32
    ca_hosts:
        ubuca02:
            external: 192.168.1.233
            internal: 10.10.0.33
    ldap_hosts:
        ubuldap02:
            external: 192.168.1.234
            internal: 10.10.0.34

# containers_config
# You can add here any compatible LXD parameter
containers_config:
    limits.cpu: '2'
    limits.memory: '2GB'
    boot.autostart: 'true'

# containers_source
# The image used to build the containers
containers_source:
    type: 'image'
    mode: 'pull'
    server: 'https://images.linuxcontainers.org'
    protocol: 'simplestreams'
    alias: 'ubuntu/bionic/amd64'

# Common variables to all containers
all_containers:
    # The directory where to store all files that are generated by the playbooks
    # Warning : this directory will store important and secret files, backup it
    #    and be sure noone can access it.
    ansible_working_directory: '/opt/ansible_secret'
    # If set to True, will renew all the certificates files when playbook is executed.
    # If set to False, will create the certificates on the first execution,
    #   and will just use them for the next ones.
    ansible_renew_all: False
    # The network ansible uses to connect to the containers
    ansible_network: 'external'
    # The python path in containers for ansible
    ansible_python_interpreter: '/usr/bin/env python3'
    # The timezone for containers
    containers_timezone: 'Europe/Paris'
    # Wether we use known_hosts fingerprints or not
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    # Better performance, but doesn't work with sudo. We don't use sudo.
    pipelining: True

# Each section of 'services' targets a service.
# Each service may have a 'vars' section and must have at least one and maybe
#   several (container name) section(s). The variables in the 'vars' section
#   will affect all the containers while the variables in the (container name)
#   section will only affect the targeted container. The variables in the
#   (vars) section can be overwritten in the (container name) section of any
#   service.
services:
    # Certificate Authority configuration
    ca_config:
        # Variables common to all containers
        vars:
            # The name of the Certificate Authority certificate file
            cert_file: 'ca.crt'
            # The name of the directory where the Certificate Authority
            #    certificate file is stored in the containers
            cert_dir: '/etc/ssl/certs'
        ubuca02:    
            organisation: 'Tech-Tips'
            ou: 'tech-tips.fr'
            country: 'FR' # This one can only be the 2 letters code of your country
            province: 'Ile-de-France'
            city: 'Paris'
            email: 'admin@tech-tips.fr'
            easy_rsa_install_dir: '/etc/easy-rsa'
            key_size: '2048'
            ca_expire: '3650'
            key_expire: '3650'
            certificates:
                servers:
                    - 'vpn.tech-tips.fr'
                    - 'ldap.tech-tips.home'
                clients:
                    - 'client01'
                    - 'client03'
                    - 'client04'
    # LDAP configuration
    ldap_config:
        vars:
            url: 'ldap.tech-tips.home'
            base_dn: 'dc=tech-tips,dc=fr'
        ubuldap02:
            toto: 'toto'
    # DNS configuration
    dns_config:
        vars:
            domains:
                internal: 'tech-tips.home'
                external: 'tech-tips.fr'
